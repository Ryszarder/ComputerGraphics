#version 450

out vec4 FragColour;

in vec3 _colour;
//in vec3 _worldNormals;
in vec2 _texCoord;
in mat3 _TBNmat;
in vec3 _fragPos;

uniform vec3 lightPos;
uniform vec3 viewPos;
uniform mat4 modelMatrix;
uniform sampler2D diffTexture;
uniform sampler2D normTexture;
uniform sampler2D specTexture;

void main()
{
	vec3 diffuseColour = texture(diffTexture, _texCoord).rgb;
	vec3 tangentSpaceNormals = texture(normTexture, _texCoord).xyz * 2 - 1;
	vec3 specularColour = texture(specTexture, _texCoord).rgb;

	//Lighting calculations go here
	//Ambient
	float ambientStrength = 0.5f;
	vec3 ambient = ambientStrength * diffuseColour;
	
	//Diffuse
	//vec3 objectSpaceNormals = _TBNmat * tangentSpaceNormals;
	//vec3 worldSpaceNormals = (modelMatrix * vec4(objectSpaceNormals, 0.0)).xyz;
	//vec3 lightDir = normalize(_fragPos - lightPos);
	//float lightVaule = max(dot(worldSpaceNormals, -lightDir), 0.0);
	//vec3 diffuse = lightVaule * diffuseColour;
	//
	////Specular
	//float specularStrength = 0.5f;
	//vec3 viewDir = normalize(_fragPos - viewPos);
	//vec3 reflectDir = reflect(lightDir, worldSpaceNormals);
	//float spec = pow(max(dot(-viewDir, reflectDir), 0.0), 2);
	//vec3 specular = spec * specularColour;
	
	//Diffuse
	vec3 objectSpaceNormals = _TBNmat * tangentSpaceNormals;
	vec3 worldSpaceNormals = (modelMatrix * vec4(objectSpaceNormals, 0.0)).xyz;
	vec3 lightDir = normalize(lightPos - _fragPos);
	float lightVaule = max(dot(worldSpaceNormals, lightDir), 0.0);
	vec3 diffuse = lightVaule * diffuseColour;
	
	//Specular
	float specularStrength = 0.5f;
	vec3 viewDir = normalize(viewPos - _fragPos);
	vec3 reflectDir = reflect(-lightDir, worldSpaceNormals);
	float spec = pow(max(dot(viewDir, reflectDir), 0.0), 2);
	vec3 specular = spec * specularColour;
	
	
	
	//Result
	FragColour = vec4(ambient + diffuse + specular, 1);
	//FragColour = vec4(texture(specTexture, _texCoord).xyz, 1);
	//FragColour = vec4((modelMatrix * vec4(objectSpaceNormals, 0.0)).xyz, 1);
}
	//FragColour = vec4(_colour * diffuse, 1);	
	//FragColour = vec4(_colour * lightVaule, 1.0);
	//FragColour = vec4(_texCoord, 0, 1);